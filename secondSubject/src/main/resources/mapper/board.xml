<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybartis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.okestro.board.repository.BoardRepository">
    <select id="findBoardById" parameterType="Long" resultType="BoardResponse">
        select board.board_id, board.user_id, user.nickname, board.title, board.content, board.created_at, board.updated_at
        from board
        join user on board.user_id = user.user_id
        where board_id=#{boardId}
    </select>


    
    <select id="findUserIdById" parameterType="Long" resultType="Integer">
        select user_id
        from board
        where board_id=#{boardId}
    </select>
    
    <select id="findBoardListByUserId" parameterType="Integer" resultType="BoardListResponse">
        select B.board_id, B.title, B.created_at, B.updated_at, U.nickname
        from board B
        join user U on board.user_id = user.user_id
        where user_id=#{userId}
        order by created_at desc
    </select>

    <select id="findBoardCount" resultType="Integer">
        select COUNT(*) from board
    </select>

    <select id="findBoardList" parameterType="Integer" resultType="BoardListResponse">
        select board.board_id, board.title, board.created_at, board.updated_at, user.nickname
        from board join user on board.user_id = user.user_id
        order by created_at desc
        LIMIT 10 offset #{page}
    </select>
    
    <insert id="createBoard" parameterType="Board">
        insert into board(user_id, title, content, created_at, updated_at) 
        values (#{userId}, #{title}, #{content}, #{createdAt}, #{updatedAt})
    </insert>
    
    <update id="updateBoard" parameterType="BoardResponse">
        update board
        set title=#{title}, content=#{content}, updated_at=#{updatedAt}
        where board_id=#{boardId}
    </update>

    <delete id="deleteBoard" parameterType="Long">
        delete from board
        where board_id=#{boardId}
    </delete>
</mapper>